# Правила для работы с кодом

## Язык общения
- Всегда отвечать на русском языке

## Процесс изменения кода
- Перед внесением изменений анализировать существующий функционал
- Делать изменения пошагово, а не всё сразу
- Сохранять существующие комментарии и документацию
- Перед удалением кода убедиться, что его функционал перенесен в новую версию
- Если есть сомнения - спрашивать у пользователя

## Процесс коммуникации
1. Анализ текущего состояния
2. Предложение конкретных изменений
3. Объяснение что и почему меняется
4. Получение подтверждения от пользователя
5. Внесение изменений
6. Проверка результата

## Работа с существующим кодом
- Сохранять существующую структуру проекта
- Не удалять рабочий функционал
- Добавлять новый функционал без нарушения старого
- Поддерживать обратную совместимость
- Сохранять стиль кодирования проекта

## Документация изменений
- Комментировать все значимые изменения
- Объяснять причины изменений
- Показывать diff изменений
- Описывать возможные побочные эффекты

## Безопасность
- Не удалять файлы без явного разрешения
- Создавать резервные копии при значительных изменениях
- Проверять влияние изменений на другие части кода

## Оптимизация
- Не оптимизировать преждевременно
- Сначала добиваться работоспособности, потом улучшать
- Измерять производительность до и после изменений

## Тестирование
- Проверять работоспособность после каждого изменения
- Добавлять проверки и валидацию данных
- Учитывать граничные случаи

## Стиль кода
- Придерживаться единого стиля в проекте
- Использовать говорящие имена переменных
- Добавлять типизацию где это возможно
- Следовать принципам SOLID и DRY 

- файл mind.md - это план работы, он не должен меняться, техническое задание, 
- файл .rules - это правила работы с кодом, они могут меняться, в зависимости от ситуации
- файл source.py - это основной файл, он не должен меняться, он содержит основной функционал

